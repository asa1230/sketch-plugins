// Make Shade

var inc = 1
var shadeSize = 10
var initialColorInc = 0.0
var finalColorInc = 0.05

var increaseColorBrightness = function(color,inc) {
	var red = [color red]
	red += inc
	if (red>1) red=1
	[color setRed:red]

	var green = [color green]
	green += inc
	if (green>1) green=1
	[color setGreen:green]

	var blue = [color blue]
	blue += inc
	if (blue>1) blue=1
	[color setBlue:blue]
}

if ([selection count]<=0) {
	[doc showMessage:"Nothing selected"];
}
else {
	for (var i=0; i<[selection count]; i++) {
		var layer = selection[i];
		
		var color = [layer textColor]
		if (!color || color==undefined) {
			color = [[[[layer style] fills] firstObject] color]
		}
		
		var shadows = [[layer style] shadows]
		
		var currentColorInc = initialColorInc
		var colorIncOffset = (finalColorInc-initialColorInc)/shadeSize
		
		for (s=0;s<shadeSize;s+=inc) {
			
			var currentColor = color
			
			log("color inc: " + currentColorInc)
			
			increaseColorBrightness(currentColor,currentColorInc)
			
			offsetX = -s
			offsetY = s+inc

			var shadow = [shadows addNewStylePart]
			[shadow setOffsetX:offsetX]
			[shadow setOffsetY:offsetY]
			[shadow setBlurRadius:0]
			[shadow setColor:color]
			
			offsetX = -s-inc
			offsetY = s

			var shadow = [shadows addNewStylePart]
			[shadow setOffsetX:offsetX]
			[shadow setOffsetY:offsetY]
			[shadow setBlurRadius:0]
			[shadow setColor:color]
			
			currentColorInc += colorIncOffset
		}
	}
}